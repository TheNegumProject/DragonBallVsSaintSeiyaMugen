


;**************************************************************************
;                                                                         *
;     Athena   Autor   Grafica : Shunchain y Programacion : Tecla2000     *
;                                                                         *
;**************************************************************************



[Data]
life = 2000			;Amount of life to start with
attack = 140		        ;attack power (more is stronger)
defence = 135		        ;defensive power (more is stronger)
fall.defence_up = 90	        ;Percentage to increase defense everytime player is knocked down
liedown.time = 60		;Time which player lies down for, before getting up
airjuggle = 15		        ;Number of points for juggling
sparkno = -1			;Default hit spark number for HitDefs
guard.sparkno = -1	        ;Default guard spark number
KO.echo = 0			;1 to enable echo on KO
volume = 0			;Volume offset (negative for softer)
IntPersistIndex = 60	        ;Variables with this index and above will not have their values
FloatPersistIndex = 40          ;reset to 0 between rounds or matches. There are 60 int variables,
  				;indexed from 0 to 59, and 40 float variables, indexed from 0 to 39.
  				;If omitted, then it defaults to 60 and 40 for integer and float
  				;variables repectively, meaning that none are persistent, i.e. all
  				;are reset. If you want your variables to persist between matches,
  				;you need to override state 5900 from common1.cns.


[Size]
xscale = 1		        ;Horizontal scaling factor.
yscale = 1			;Vertical scaling factor.
ground.back = 20		;Player width (back, ground)
ground.front = 20		;Player width (front, ground)
air.back = 12		        ;Player width (back, air)
air.front = 11		        ;Player width (front, air)
height = 60			;Height of player (for opponent to jump over)
attack.dist = 160		;Default attack distance
attack.width = 4,4		;Default attack width: back, front
proj.attack.dist = 90	        ;Default attack distance for projectiles
proj.doscale = 0		;Set to 1 to scale projectiles too   
head.pos = -5, -90	        ;Approximate position of head
mid.pos = -5, -60		;Approximate position of midsection
shadowoffset = 0		;Number of pixels to vertically offset the shadow
draw.offset = 0,0		;Player drawing offset in pixels (x, y)
z.width = 3			;Player width (into and out)

[Velocity]
walk.fwd  = 2.4		    ;Walk forward
walk.back = -2.2	    ;Walk backward
run.fwd  = 5.0, 0	    ;Run forward (x, y)
run.back = -4.5,-3.8	    ;Hop backward (x, y)
jump.neu = 0,-10.4	    ;Neutral jumping velocity (x, y)
jump.back = -3.55	    ;Jump back Speed (x, y)
jump.fwd = 3.5		    ;Jump forward Speed (x, y)
runjump.back = -3.55,-8.1   ;Running jump speeds (opt)
runjump.fwd = 4,-8.1	    ;.
airjump.neu = 0,-8.1	    ;.
airjump.back = -2.55	    ;Air jump speeds (opt)
airjump.fwd = 2.5		;.

[Movement]
airjump.num = 1		;Number of air jumps allowed (opt)
airjump.height = 0	;Minimum distance from ground before you can air jump (opt)
yaccel = .40		;Vertical acceleration
stand.friction = .85	;Friction coefficient when standing
crouch.friction = .82	;Friction coefficient when crouching

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------



;---------------------------------------------------------------------------
; Standing Light Punch
; CNS difficulty: easy
[Statedef 200]
type    = S			;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A			;Move-type: A-attack, I-idle, H-gethit
physics = S			;Physics: S-stand, C-crouch, A-air
juggle  = 1			;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0			;Set velocity (x,y) (Def: no change)
ctrl = 0			;Set ctrl (Def: no change)
anim = 200			;Change animation (Def: no change)
poweradd = 20			;Power to add (Def: 0)
sprpriority = 2			;Set layering priority to 2 (in front)

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 200,0

[State 200, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 20, 8		        ;Damage that move inflicts, guard damage
animtype = Light		;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default
				;Hit/Miss/Dodge type (Def: Hit)
pausetime = 5, 10		;Time attacker pauses, time opponent shakes
sparkno = s7020		        ;Spark anim no (Def: set above)
sparkxy = -10, -50		;X-offset for the "hit spark" rel. to p2,
                		;Y-offset for the spark rel. to p1
hitsound = S200, 1			;Sound to play on hit
guardsound = S300, 0		;Sound to play on guard
ground.type =  Low		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 15		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 12		;Time before opponent regains control in air
air.fall = 1

[State 200, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Medium Punch
; CNS difficulty: easy
[Statedef 210]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 65
ctrl = 0
velset = 0,0
anim = 210

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 210,0

[State 210, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 30, 12		        ;Damage that move inflicts, guard damage
animtype = Light		;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default
				;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 15		;Time attacker pauses, time opponent shakes
sparkno = s7021 		;Spark anim no (Def: set above)
sparkxy = -20, -80		;X-offset for the "hit spark" rel. to p2,
				;Y-offset for the spark rel. to p1
hitsound = S210, 1			;Sound to play on hit
guardsound = S310, 0		;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 20		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 12		;Time before opponent regains control in air
air.fall = 1


[State 210, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Strong Punch
; CNS difficulty: easy
[Statedef 220]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 65
ctrl = 0
velset = 0,0
anim = 220

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 220,0


[State 210, 1]
type = HitDef
trigger1 = animelem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 45, 18		        ;Damage that move inflicts, guard damage
animtype = Hard  		;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default
				;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 20		;Time attacker pauses, time opponent shakes
sparkno = s7022 		;Spark anim no (Def: set above)
sparkxy = -10, -25		;X-offset for the "hit spark" rel. to p2,
				;Y-offset for the spark rel. to p1
hitsound = S220, 1			;Sound to play on hit
guardsound = S320, 0		;Sound to play on guard
ground.type =  Low		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 10		;Time that the opponent slides back
ground.hittime  = 30		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 12		;Time before opponent regains control in air
air.fall = 1

[State 220, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Light Kick
; CNS difficulty: easy
[Statedef 230]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 15
ctrl = 0
velset = 0,0
anim = 230

[State 240, 1]
type = PlaySnd
trigger1 = Time = 1
value = 230,0

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 20, 8			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 15			;Time attacker pauses, time opponent shakes
sparkno = s7021			;Spark anim no (Def: set above)
sparkxy = -10, -25		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S230,1			;Sound to play on hit
guardsound = S300,0			;Sound to play on guard
ground.type = Low		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -1		;Velocity at which opponent is pushed
airguard.velocity = -1,0	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = Low			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 9			;Time before opponent regains control in air
air.fall = 1

[State 230, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Medium Kick
; CNS difficulty: easy
[Statedef 240]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 25
ctrl = 0
velset = 0,0
anim = 240

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 240,0

[State 200, 1]
type = HitDef
trigger1 = animelem = 4
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 30, 12  		;Damage that move inflicts, guard damage
animtype = Medium	        ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 15		;Time attacker pauses, time opponent shakes
sparkno = s7020			;Spark anim no (Def: set above)
sparkxy = -15, -90		;X-offset for the "hit spark" rel. to p2,					;Y-offset for the spark rel. to p1
hitsound = S240, 1			;Sound to play on hit
guardsound = S310, 0		;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 20		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 20		;Time before opponent regains control in ai
air.fall = 1

[State 240, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Strong Kick
; CNS difficulty: easy
[Statedef 250]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 50
ctrl = 0
velset = 0,0
anim = 250

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 250,0

[State 200, 1]
type = HitDef
trigger1 = animelem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 45, 18  		;Damage that move inflicts, guard damage
animtype = Hard 	        ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 20		;Time attacker pauses, time opponent shakes
sparkno = s7023			;Spark anim no (Def: set above)
sparkxy = -20, -75		;X-offset for the "hit spark" rel. to p2,					;Y-offset for the spark rel. to p1
hitsound = S250, 1			;Sound to play on hit
guardsound = S320, 0		;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 30     	;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 20		;Time before opponent regains control in ai
air.fall = 1

[State 250, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;----------------------------------------------

;Patada alternativa
[Statedef 270]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 15
ctrl = 0
velset = 0,0
anim = 270
sprpriority = 2

[State 260, 1]
type = PlaySnd
trigger1 = Time = 1
value = 250,0

[State 260, 1]
type = PlaySnd
trigger1 = AnimElem = 3
value = 1500,3
volume = 180

[State -3]
type = Explod
trigger1 = AnimElem = 3
anim = 271
id = 271
pos = 0,0
postype = p1
sprpriority = 1
removetime = 5
bindtime = -1
ownpal = 1
supermove = 1
removeongethit = 1
ignorehitpause = 1

[State -3]
type = Explod
trigger1 = AnimElem = 4
anim = 272
id = 272
pos = 0,0
postype = p1
sprpriority = 3
removetime = 18
bindtime = -1
ownpal = 1
supermove = 1
removeongethit = 1
ignorehitpause = 1

[State 0, Shunshunrikka]
type           = Helper
trigger1       = MoveHit = 1 && (P2StateNo = 5000 || P2StateNo = 5010 || P2StateNo = 5020 || P2MoveType = H)
helpertype     = normal
name           = "HitSFX"
ID             = 14996
stateno        = 14996
pos            = (Floor(p2bodydist X + 29)), -35
postype        = p1
facing         = 1
keyctrl        = 0
ownpal         = 1
size.xscale    = 0.4
size.yscale    = 0.4
ignorehitpause = 1
persistent     = 9

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 60, 20			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 20			;Time attacker pauses, time opponent shakes
sparkno = s7022  		;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S260,0			;Sound to play on hit
guardsound = S320,0			;Sound to play on guard
airguard.velocity = -2,0	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
ground.hittime = 19
ground.type = Trip	
ground.slidetime = 19
ground.velocity = -1, -10
air.velocity = -4,-3
fall = 1

air.hittime = 9			;Time before opponent regains control in air
air.fall = 1


[State 200, 1]
type = HitDef
trigger1 = (AnimElem = 4 && movehit = 0)
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 60, 20			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 20			;Time attacker pauses, time opponent shakes
sparkno = s7023			;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S260,0			;Sound to play on hit
guardsound = S320,0			;Sound to play on guard
airguard.velocity = -2,0	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
ground.hittime = 19
ground.type = Trip
ground.slidetime = 19
ground.velocity = -1, -10
air.velocity = -4,-3
fall = 1

air.hittime = 9			;Time before opponent regains control in air
air.fall = 1
		

[State 240, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[Statedef 260]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 15
ctrl = 0
velset = 0,0
anim = 260

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 220,0


[State 200, 1]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 30, 12			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 15			;Time attacker pauses, time opponent shakes
sparkno = s7020				;Spark anim no (Def: set above)
sparkxy = -15, -62		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S240,1			;Sound to play on hit
guardsound = S310,0			;Sound to play on guard
ground.type = Low		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 6		;Time that the opponent slides back
ground.hittime  = 19    	;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -2,0	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = Low  		;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -2.7,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 9			;Time before opponent regains control in air
air.fall = 1
[State 240, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


[Statedef 280]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 15
ctrl = 0
velset = 0,0
anim = 280
sprpriority = 2

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 220,0

[State 260, 1]
type = PlaySnd
trigger1 = AnimElem = 2
value = 1500,2
volume = 180

[State -3]
type = Explod
trigger1 = AnimElem = 3
anim = 281
id = 281
pos = 0,0
postype = p1
sprpriority = 1
removetime = 10
bindtime = -1
ownpal = 1
supermove = 1
removeongethit = 1
ignorehitpause = 1

[State -3]
type = Explod
trigger1 = AnimElem = 4
anim = 282
id = 282
pos = 0,0
postype = p1
sprpriority = 3
removetime = 10
bindtime = -1
ownpal = 1
supermove = 1
removeongethit = 1
ignorehitpause = 1

[State 0, Shunshunrikka]
type           = Helper
trigger1       = MoveHit = 1 && (P2StateNo = 5000 || P2StateNo = 5010 || P2StateNo = 5020 || P2MoveType = H)
helpertype     = normal
name           = "HitSFX"
ID             = 14996
stateno        = 14996
pos            = (Floor(p2bodydist X + 29)), -75
postype        = p1
facing         = 1
keyctrl        = 0
ownpal         = 1
size.xscale    = 0.4
size.yscale    = 0.4
ignorehitpause = 1
persistent     = 9

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 60, 20			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 20			;Time attacker pauses, time opponent shakes
sparkno = s7022			;Spark anim no (Def: set above)
sparkxy = -10, -75		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S260,0			;Sound to play on hit
guardsound = S320,0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 19		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -2,0	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = Low  		;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -2.7,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 9			;Time before opponent regains control in air
fall = 1
envshake.time = 8
envshake.ampl = 1
envshake.freq=60
p2stateno = 5800

[State 200, 1]
type = HitDef
trigger1 = (AnimElem = 4 && movehit = 0)
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 60, 20			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 20			;Time attacker pauses, time opponent shakes
sparkno = s7023				;Spark anim no (Def: set above)
sparkxy = -10, -75		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S260,0			;Sound to play on hit
guardsound = S320,0			;Sound to play on guard
ground.type = High
ground.slidetime = 19
ground.hittime  = 35
ground.velocity = -6,3
guard.velocity = -7
air.velocity = 3.5
fall = 1
envshake.time = 8
envshake.ampl = 1
envshake.freq=60
p2stateno = 5800


[State 240, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


;---------------------------------------------------------------------------

[Statedef 5800]
type = S
movetype = H
physics = N
velset = 0,0
ctrl = 0

[State 330, 4]
type = Velset
trigger1 = time = 25
x = -26

[State 5600, snd]
type = PlaySnd
trigger1 = time = 0
value = 5000, 0

[State 5600, nothit]
type = NotHitBy
trigger1 = 1
value = SCA

[State 5600, push]
type = PlayerPush
trigger1 = 1
value = 0

[State 5600, anim]
type = ChangeAnim
trigger1 = 1
value = 5012

[State 5600, snd]
type = PlaySnd
trigger1 = time > 5
trigger1 = backedgedist <= 20
value = 5100, 0

[State 5600, shake]
type = EnvShake
trigger1 = time > 5
trigger1 = backedgedist <= 20
time = 10
ampl = 4

[State 5600, end]
type = ChangeState
trigger1 = time > 5
trigger1 = backedgedist <= 20
value = 5810

[Statedef 5810]
type = A
movetype = H
physics = N
velset = 0,0
ctrl = 0

[State 5610, nothit]
type = NotHitBy
trigger1 = 1
value = SCA

[State 5610, anim]
type = ChangeAnim
trigger1 = time < 7
value = 5030

[State 5610, anim]
type = ChangeAnim
trigger1 = time = 7
value = 5050

[State 5610, vel]
type = VelSet
trigger1 = time = 7
persistent = 0
x = 0.75
y = -6

[State 5610, vel]
type = VelAdd
trigger1 = time >= 7
y = 0.45

[State 5610, shake]
type = EnvShake
triggerall = time > 7
trigger1 = Vel Y > 0
trigger1 = Pos Y > 15
time = 10
ampl = 3

[State 5610, anim]
type = ChangeAnim
triggerall = time > 7
trigger1 = Vel Y > 0
trigger1 = Pos Y > 15
value = 5050

[State 5610, end]
type = SelfState
triggerall = time > 7
trigger1 = Vel Y > 0
trigger1 = Pos Y > 15
value = 5100


;-----------------------


[Statedef 290]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 15
ctrl = 0
velset = 0,0
anim = 290
sprpriority = 2

[State 260, 1]
type = PlaySnd
trigger1 = Time = 1
value = 250,0

[State 260, 1]
type = PlaySnd
trigger1 = AnimElem = 2
value = 1500,5
volume = 180

[State -3]
type = Explod
trigger1 = AnimElem = 2
anim = 291
id = 291
pos = 0,0
postype = p1
sprpriority = 1
removetime = 22
bindtime = -1
ownpal = 1
supermove = 1
removeongethit = 1
ignorehitpause = 1

[State 0, Shunshunrikka]
type           = Helper
trigger1       = MoveHit = 1 && (P2StateNo = 5000 || P2StateNo = 5010 || P2StateNo = 5020 || P2MoveType = H)
helpertype     = normal
name           = "HitSFX"
ID             = 14996
stateno        = 14996
pos            = (Floor(p2bodydist X + 29)), -85
postype        = p1
facing         = 1
keyctrl        = 0
ownpal         = 1
size.xscale    = 0.4
size.yscale    = 0.4
ignorehitpause = 1
persistent     = 9

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 40, 20			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 15			;Time attacker pauses, time opponent shakes
sparkno = s7022				;Spark anim no (Def: set above)
sparkxy = -10, -85		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S260,0			;Sound to play on hit
guardsound = S320,0			;Sound to play on guard
airguard.velocity = -2,0	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High 		;Type: High, Low, Trip (def: same as ground.type)
ground.hittime = 19
ground.type = Trip	
ground.slidetime = 19
ground.velocity = 0, 0
air.velocity = 0,0


air.hittime = 9			;Time before opponent regains control in air
air.fall = 1


[State 200, 1]
type = HitDef
trigger1 = AnimElem = 3 
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 50, 20			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 15			;Time attacker pauses, time opponent shakes
sparkno = s7023			;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S260,0			;Sound to play on hit
guardsound = S320,0			;Sound to play on guard
airguard.velocity = -2,0	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
ground.hittime = 19
ground.type = Trip
ground.slidetime = 19
ground.velocity = 0, 0
air.velocity = 0,0
fall = 1

air.hittime = 9			;Time before opponent regains control in air
air.fall = 1
		

[State 200, 1]
type = HitDef
trigger1 = (AnimElem = 4 && movehit = 0)
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 50, 20			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 15			;Time attacker pauses, time opponent shakes
sparkno = s7023				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S260,0			;Sound to play on hit
guardsound = S320,0			;Sound to play on guard
airguard.velocity = -2,0	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
ground.hittime = 19
ground.type = Trip
ground.slidetime = 19
ground.velocity = 0, 0
air.velocity = 0,0
fall = 1

air.hittime = 9			;Time before opponent regains control in air
air.fall = 1

[State 240, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------


[Statedef 295]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 15
ctrl = 0
velset = 0,0
anim = 295
sprpriority = 2

[State 260, 1]
type = PlaySnd
trigger1 = Time = 1
value = 250,0

[State -3]
type = Explod
trigger1 = AnimElem = 2
anim = 296
id = 296
pos = 0
postype = p1
sprpriority = 1
removetime = 13
bindtime = -1
ownpal = 1
supermove = 1
removeongethit = 1
ignorehitpause = 1

[State 260, 1]
type = PlaySnd
trigger1 = AnimElem = 2
value = 1500,4
volume = 180

[State 0, Shunshunrikka]
type           = Helper
trigger1       = MoveHit = 1 && (P2StateNo = 5000 || P2StateNo = 5010 || P2StateNo = 5020 || P2MoveType = H)
helpertype     = normal
name           = "HitSFX"
ID             = 14996
stateno        = 14996
pos            = (Floor(p2bodydist X + 29)), -84
postype        = p1
facing         = 1
keyctrl        = 0
ownpal         = 1
size.xscale    = 0.4
size.yscale    = 0.4
ignorehitpause = 1
persistent     = 9

[State 210, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 45, 18		        ;Damage that move inflicts, guard damage
animtype = Hard  		;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default
				;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 20		;Time attacker pauses, time opponent shakes
sparkno = s7021			;Spark anim no (Def: set above)
sparkxy = -10, -84		;X-offset for the "hit spark" rel. to p2,
				;Y-offset for the spark rel. to p1
hitsound = S260, 0			;Sound to play on hit
guardsound = S320, 0		;Sound to play on guard
pausetime = 10,10
ground.hittime = 16
ground.type = High	
ground.slidetime = -5
ground.velocity = -6,-6;0
air.velocity = -10;,-3		
p2stateno = 1025

[State 240, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

; player 2 state
[Statedef 1025]
type    = A
movetype= H
physics = N
velset = 0,0

[State 1025, Anim] 
type = ChangeAnim2
trigger1 = Time >= 0
value = 1025

[State 1025, State]
type = ChangeState
trigger1 = HitShakeOver = 1
value = 1026

;------------------
;player2 on air
[Statedef 1026]
type    = A
movetype= H
physics = N

[State 1026, Velocity]
type = HitVelSet
trigger1 = Time = 0
x = 1
y = 1

[State 1026, Gravity]
type = VelAdd
trigger1 = Time >= 0
y = .45

[State 1026, No scroll]
type = ScreenBound
triggerall = Pos y < -15
trigger1 = BackEdgeBodyDist < 65
trigger2 = FrontEdgeBodyDist < 65
value = 1
movecamera = 0,1

[State 1026, Hit wall]
type = ChangeState
triggerall = Pos y < -15
trigger1 = BackEdgeBodyDist <= 20
trigger2 = FrontEdgeBodyDist <= 20
value = 1027

[State 1026, Hit ground]
type = SelfState
trigger1 = (Vel y > 0) && (Pos y >= 0)
value = 5100

;------------------
;player2 hit on wall
[Statedef 1027]
type    = A
movetype= H
physics = N

[State 1027, Turn]
type = Turn
trigger1 = (Time = 0) && (FrontEdgeBodyDist <= 30)

[State 1027, Pos]
type = PosAdd
trigger1 = Time = 0
x = 15 - BackEdgeBodyDist

[State 1027, Stop moving]
type = PosFreeze
trigger1 = 1
x = 1
y = 1

[State 1027, No scroll]
type = ScreenBound
trigger1 = 1
value = 1
movecamera = 0,1

[State 1027, Spark]
type = Explod
trigger1 = Time = 0
anim = F72
pos = 0, floor (screenpos y) - 50
postype = back
sprpriority = 3
ownpal = 1

[State 1027, Anim]
type = ChangeAnim2
trigger1 = Time = 0
value = 1027

[State 1027, Sound]
type = PlaySnd
trigger1 = Time = 1
value = 240,0

[State 1027, State]
type = ChangeState
trigger1 = AnimTime = 0
value = 1028

;------------------
; hit on wall
[Statedef 1028]
type    = A
movetype= H
physics = N

[State 1028, 1]
type = NotHitBy
trigger1 = Time >= 0
value = , NA, NP

[State 1028, Vel Y]
type = VelSet
trigger1 = Time = 0
y = -6

[State 1028, Vel X]
type = VelSet
trigger1 = Time = 0
x = 1.6

[State 1028, Turn]
type = Turn
trigger1 = (Time = 0) && (BackEdgeDist < 30)

[State 1028, Gravity]
type = VelAdd
trigger1 = Time >= 0
y = .35

[State 1028, Anim 5050] ;Self falling animation
type = ChangeAnim
trigger1 = Time = 0
trigger1 = !SelfAnimExist(5052)
value = 5050

[State 1028, Anim 5052] ;Self falling animation (diagup type)
type = ChangeAnim
trigger1 = Time = 0
trigger1 = SelfAnimExist(5052)
value = 5052

[State 1028, Anim 5060] ;Coming down - normal
type = ChangeAnim
trigger1 = Vel Y > -2
trigger1 = Anim = 5050
trigger1 = SelfAnimExist(5060)
persistent = 0
value = 5060

[State 1028, Anim 5062] ;Coming down - diagup type
type = ChangeAnim
trigger1 = Vel Y > -2
trigger1 = Anim = 5052
trigger1 = SelfAnimExist(5062)
persistent = 0
value = 5062

[State 1028, Hit ground]
type = SelfState
trigger1 = (Vel y > 0) && (Pos y >= 0)
value = 5100

;----------------------------
;---------------------------------------------------------------------------

;-------------------------------------------------------------------------

[Statedef 400]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 15
ctrl = 0
anim = 400

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 200,0

[State 200, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 20, 8  		;Damage that move inflicts, guard damage
animtype = Light	        ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 5, 10		;Time attacker pauses, time opponent shakes
sparkno = s7020			;Spark anim no (Def: set above)
sparkxy = -10, -26		;X-offset for the "hit spark" rel. to p2,					;Y-offset for the spark rel. to p1
hitsound = S200, 1			;Sound to play on hit
guardsound = S300, 0		;Sound to play on guard
ground.type = Low        	;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 15     	;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 15		;Time before opponent regains control in ai

[State 400, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Medium Punch
[Statedef 410]
type    = C
movetype= A
physics = C
juggle  = 6
poweradd= 50
ctrl = 0
anim = 410
sprpriority = 2

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 210,0

[State -3]
type = Explod
trigger1 = AnimElem = 2
anim = 411
id = 411
pos = 0,0
postype = p1
sprpriority = 1
removetime = 18
bindtime = -1
ownpal = 1
supermove = 1
removeongethit = 1
ignorehitpause = 1

[State 200, 1]
type = HitDef
trigger1 = animelem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 30, 12  		;Damage that move inflicts, guard damage
animtype = Medium	        ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 5, 10		;Time attacker pauses, time opponent shakes
sparkno = s7023			;Spark anim no (Def: set above)
sparkxy = -20, -65		;X-offset for the "hit spark" rel. to p2,					;Y-offset for the spark rel. to p1
hitsound = S210, 1			;Sound to play on hit
guardsound = S310, 0		;Sound to play on guard
ground.type = Low        	;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 15     	;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 15		;Time before opponent regains control in ai

[State 410, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Strong Punch
[Statedef 420]
type    = C
movetype= A
physics = C
juggle  = 6
poweradd= 50
ctrl = 0
anim = 450

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 220,0

[State 200, 1]
type = HitDef
trigger1 = animelem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 45, 18  		;Damage that move inflicts, guard damage
animtype = Hard 	        ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 5, 10		;Time attacker pauses, time opponent shakes
sparkno = s7022			;Spark anim no (Def: set above)
sparkxy = -20, -45		;X-offset for the "hit spark" rel. to p2,					;Y-offset for the spark rel. to p1
hitsound = S220, 1			;Sound to play on hit
guardsound = S320, 0		;Sound to play on guard
ground.type = Low        	;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 15     	;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 15		;Time before opponent regains control in ai

[State 420, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Light Kick
; CNS difficulty: easy
[Statedef 430]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 22
ctrl = 0
anim = 430

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 230,0

[State 200, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 20, 8  		;Damage that move inflicts, guard damage
animtype = Light	        ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 5, 10		;Time attacker pauses, time opponent shakes
sparkno = s7021 		;Spark anim no (Def: set above)
sparkxy = -5, -5		;X-offset for the "hit spark" rel. to p2,					;Y-offset for the spark rel. to p1
hitsound = S230, 1			;Sound to play on hit
guardsound = S300, 0		;Sound to play on guard
ground.type = Low        	;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 15     	;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 15		;Time before opponent regains control in ai

[State 430, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Medium Kick
; CNS difficulty: easy
[Statedef 440]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 22
ctrl = 0
anim = 440

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 240,0

[State 200, 1]
type = HitDef
trigger1 = animelem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 30, 12  		;Damage that move inflicts, guard damage
animtype = Medium	        ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 15		;Time attacker pauses, time opponent shakes
sparkno = s7022			;Spark anim no (Def: set above)
sparkxy = -8, -17		;X-offset for the "hit spark" rel. to p2,					;Y-offset for the spark rel. to p1
hitsound = S240, 1			;Sound to play on hit
guardsound = S310, 0		;Sound to play on guard
ground.type = Trip		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 25		;Time opponent is in hit state
ground.velocity = -2,-5		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 20		;Time before opponent regains control in ai
fall = 1


[State 440, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouch Strong Kick
; CNS difficulty: easy
; Description: This move uses "Trip" for the "ground.type" parameter in
;     its HitDef. It's a special type that puts the opponent in a tripped
;     animation as he falls. Also, the hitflag parameter in the HitDef
;     is set to "MAFD". The "D" indicates that a downed opponent can be
;     hit by the attack.
[Statedef 450]
type    = C
movetype= A
physics = C
juggle  = 7
poweradd= 70
ctrl = 0
anim = 420

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 250,0

[State 440, 2]
type = HitDef
trigger1 = AnimElem = 2
priority = 4
attr = C, NA
damage   = 45,18
getpower = 60
givepower = 30
animtype = Med
guardflag = LA
pausetime = 12,12
sparkno = s7023 		;Spark anim no (Def: set above)
sparkxy = -8,-15
hitsound   = S250,1
guardsound = S320,0
ground.type = Trip
ground.slidetime = 16
ground.hittime  = 20
ground.velocity = -2,-5  
guard.velocity = -2
air.velocity = -4
airguard.velocity = -3      
fall = 1

[State 450, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Jump Light Punch
; CNS difficulty: easy
[Statedef 600]
type    = A
movetype= A
physics = A
juggle  = 2
poweradd= 11
ctrl = 0
anim = 600


[State -3, Explod]
type = Explod
trigger1 = MoveHit = 1 
anim = 7020
pos = -5,-85
postype = P2
sprpriority = 5
ownpal = 0
bindtime = 170

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 200,0

[State 200, 1]
type = HitDef
trigger1 = animelem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 20, 8  		;Damage that move inflicts, guard damage
animtype = Light	        ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 10		;Time attacker pauses, time opponent shakes
sparkno = -1		;Spark anim no (Def: set above)
sparkxy = -15, -55		;X-offset for the "hit spark" rel. to p2,					;Y-offset for the spark rel. to p1
hitsound = S200, 1			;Sound to play on hit
guardsound = S300, 0		;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 10		;Time opponent is in hit state
ground.velocity = -2		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 20		;Time before opponent regains control in ai

[State 600, 5]
type = CtrlSet
trigger1 = Time = 20
value = 1

;---------------------------------------------------------------------------
; Jump Medium Punch
; CNS difficulty: easy
[Statedef 610]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 65
ctrl = 0
anim = 610

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 210,0

[State -3, Explod]
type = Explod
trigger1 = MoveHit = 1 
anim = 7021
pos = -5,-85
postype = P2
sprpriority = 5
ownpal = 0
bindtime = 170

[State 200, 1]
type = HitDef
trigger1 = animelem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 30, 12  		;Damage that move inflicts, guard damage
animtype = Medium	        ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 15		;Time attacker pauses, time opponent shakes
sparkno = -1            	;Spark anim no (Def: set above)
sparkxy = -15, -55		;X-offset for the "hit spark" rel. to p2,					;Y-offset for the spark rel. to p1
hitsound = S210, 1			;Sound to play on hit
guardsound = S310, 0		;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 15		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 20		;Time before opponent regains control in ai

[State 610, 5]
type = CtrlSet
trigger1 = Time = 20
value = 1

;---------------------------------------------------------------------------
; Jump Strong Punch
; CNS difficulty: easy
[Statedef 620]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 70
ctrl = 0
anim = 620

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 220,0

[State -3, Explod]
type = Explod
trigger1 = MoveHit = 1 
anim = 7022
pos = -5,-85
postype = P2
sprpriority = 5
ownpal = 0
bindtime = 170

[State 200, 1]
type = HitDef
trigger1 = animelem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 45, 18  		;Damage that move inflicts, guard damage
animtype = Heavy	        ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 12, 20		;Time attacker pauses, time opponent shakes
sparkno = -1			;Spark anim no (Def: set above)
sparkxy = -15, -55		;X-offset for the "hit spark" rel. to p2,					;Y-offset for the spark rel. to p1
hitsound = S220, 1			;Sound to play on hit
guardsound = s320, 0		;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 15		;Time opponent is in hit state
ground.velocity = -6		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 20		;Time before opponent regains control in ai

[State 620, 5]
type = CtrlSet
trigger1 = Time = 20
value = 1

;---------------------------------------------------------------------------
; Jump Light Kick
; CNS difficulty: easy
[Statedef 630]
type    = A
movetype= A
physics = A
juggle  = 3
poweradd= 20
ctrl = 0
anim = 630

[State -3, Explod]
type = Explod
trigger1 = MoveHit = 1 
anim = 7021
pos = -5,-85
postype = P2
sprpriority = 5
ownpal = 0
bindtime = 170

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 230,0

[State 200, 1]
type = HitDef
trigger1 = animelem = 2
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 20, 8  		;Damage that move inflicts, guard damage
animtype = Light	        ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 6, 10		;Time attacker pauses, time opponent shakes
sparkno = -1		;Spark anim no (Def: set above)
sparkxy = -9, -33		;X-offset for the "hit spark" rel. to p2,					;Y-offset for the spark rel. to p1
hitsound = S230, 1			;Sound to play on hit
guardsound = S300, 0		;Sound to play on guard
ground.type = High        	;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 10    	;Time opponent is in hit state
ground.velocity = -2		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 15		;Time before opponent regains control in ai

[State 630, 5]
type = CtrlSet
trigger1 = Time = 20
value = 1

;---------------------------------------------------------------------------
; Jump Medium Kick
; CNS difficulty: easy
[Statedef 640]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 65
ctrl = 0
anim = 640

[State -3, Explod]
type = Explod
trigger1 = MoveHit = 1 
anim = 7020
pos = -5,-85
postype = P2
sprpriority = 5
ownpal = 0
bindtime = 170

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 240,0

[State 200, 1]
type = HitDef
trigger1 = animelem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 30, 12		;Damage that move inflicts, guard damage
animtype = Medium 	        ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 15		;Time attacker pauses, time opponent shakes
sparkno = -1		;Spark anim no (Def: set above)
sparkxy = -15, -70		;X-offset for the "hit spark" rel. to p2,					;Y-offset for the spark rel. to p1
hitsound = S250, 1			;Sound to play on hit
guardsound = s310, 0		;Sound to play on guard
ground.type = High        	;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 15     	;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 15		;Time before opponent regains control in ai
[State 640, 5]
type = CtrlSet
trigger1 = Time = 20
value = 1

;---------------------------------------------------------------------------
; Jump Strong Kick
; CNS difficulty: easy
[Statedef 650]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 70
ctrl = 0
anim = 650

[State -3, Explod]
type = Explod
trigger1 = MoveHit = 1 
anim = 7023
pos = -5,-85
postype = P2
sprpriority = 5
ownpal = 0
bindtime = 170

[State 201 , 1]
type = PlaySnd
trigger1 = AnimElem = 1
value = 250,0

[State 200, 1]
type = HitDef
trigger1 = animelem = 3
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 45, 18  		;Damage that move inflicts, guard damage
animtype = Hard 	        ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit		;Attack priority: 0 (least) to 7 (most), 4 default					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 15, 20		;Time attacker pauses, time opponent shakes
sparkno = -1		;Spark anim no (Def: set above)
sparkxy = -15, -60		;X-offset for the "hit spark" rel. to p2,					;Y-offset for the spark rel. to p1
hitsound = S250, 1			;Sound to play on hit
guardsound = S320, 0		;Sound to play on guard
ground.type = High        	;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 20     	;Time opponent is in hit state
ground.velocity = -6		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 15		;Time before opponent regains control in ai

[State 650, 5]
type = CtrlSet
trigger1 = Time = 20
value = 1

;---------------------------------------------------------------------------
; Throw - Attempt
; CNS difficulty: medium-advanced
; Description: Throws are not difficult to make, although then can be
;     tedious at times. Throw attempt states have a HitDef of a
;     special format. The key parameters in a throw are p1stateno
;     and p2stateno. If the HitDef successfully connects, then
;     the attacker will change to the state number specified by
;     p1stateno, and the opponent will be change to the state
;     number assigned to p2stateno. The special thing about p2stateno
;     is that the opponent will be temporarily brought into the
;     attacker's state file. In this case, no matter who the
;     opponent is, he will be taken to state 820 of this file (kfm.cns)
;     and remain here until the end of the throw (look at his debug
;     information when he is being thrown; the text changes to yellow
;     to mean that he is in another player's state file).
[Statedef 800]
type = S
movetype = A
physics = S
poweradd = 110
ctrl = 0
anim = 800
sprpriority = -1



[State 900, 0]
type = HitDef
trigger1 = AnimElem = 1
attr = S, NT
Hitflag = M-
priority = 2, Miss
sparkno = -1
hitsound = S800, 0
sprpriority = 3
p1stateno = 805
p2stateno = 810

[State 900, 1]
type = ChangeState
Trigger1 = AnimTime = 0
value = 0
ctrl = 1

[Statedef 805]
type = S
movetype = A
physics = N
anim = 805
velset = 0,0
sprpriority = -1

[State 906, 3]
type = PlaySnd
trigger1 = Time = 10
value = 40,0

[State 906, 3]
type = PlaySnd
trigger1 = Time = 5
value = 41,0

[State -3, Explod]
type = Explod
trigger1 = animelem = 1 
anim = 7020
pos = -15,-85
postype = P2
sprpriority = 5
ownpal = 0
bindtime = 170

[State 905, 0]
type = Changestate
trigger1 = animtime = 0
value = 806

[Statedef 806]
type = S
movetype = A
physics = N
anim = 806

[State 906, 0]
type = VelSet
trigger1 = Time = 0
x = 0
y = -6

[State -3, Explod]
type = Explod
trigger1 = Vel Y > 0
trigger1 = Pos Y > 0
anim = 7023
pos = 10,-10
postype = P1
sprpriority = 5
ownpal = 0
bindtime = 170

[State 906, 1]
type = VelAdd
trigger1 = Time >= 0
y = .4

[State 906, 2]
type = Changestate
trigger1 = Vel Y > 0
trigger1 = Pos Y > 0
value = 807

[Statedef 807]
type    = S
movetype= A
physics = N
ctrl = 0
anim = 807
sprpriority = -1

[State 908, 0]
type = VelSet
trigger1 = Time = 0
x = 0
y = 0

[State 908, 1]
type = EnvShake
Trigger1 = Time = 0
time = 12
ampl = 4
freq = 127

[State 908, 2]
type = TargetLifeAdd
trigger1 = Time = 0
value = -92

[State 908, 3]
type = PlaySnd
trigger1 = Time = 0
value = 1000,10

[State 908, 4]
type = PlaySnd
trigger1 = Time = 0
value = 220,0

[State 908, 5]
type = GameMakeAnim
trigger1 = Time = 0
value = 2
pos = 37,-15

[State 908, 7]
type = TargetVelSet
trigger1 = Time = 0
y = -9.5

[State 908, 8]
type = PlaySnd
trigger1 = Time = 0
value = 1500, 6
volume = 250

[State 908, 9]
type = GameMakeAnim
trigger1 = Time = 0
value = 60
pos = 0, 0
under = 1

[State 908, 10]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;-------------------------

;state P2

[Statedef 810]
type = A
movetype = H
physics = N
ctrl = 0
velset = 0, 0

[State 910, 0]
type = VelSet
trigger1 = AnimElem = 3
x = 0
y = 0

[State 910, 2]
type = Changeanim2
trigger1 = Time = 0
value = 810

[State 910, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 811


[Statedef 811]
type = L
movetype = H
physics = N
sprpriority = 1
velset = 6, 0


[State 911, 0]
type = Changeanim2
trigger1 = Time = 0
value = 811

[State 911, 1]
type = PosSet
trigger1 = Time = 0
y = 0

[State 911, 2]
type = VelSet
trigger1 = Time = 0
y = 0

[State 911, 3]
type = VelMul
trigger1 = Time = 0
x = .75

[State 911, 4]
type = GameMakeAnim
trigger1 = Time = 1
value = 60
pos = 0, 0
under = 1

[State 911, 7]
type = PosSet
trigger1 = Time = 3
y = 20

[State 911, 8]
type = VelAdd
trigger1 = Time >= 3
y = .4

[State 911, 9]
type = ChangeState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 12
value = 813


[Statedef 813]
type = L
movetype= H
physics = N
sprpriority = 1

[State 913, 0]
type = ChangeAnim2
trigger1 = time = 0
value = 813

[State 913, 1]
type = PosSet
trigger1 = Time = 0
y = 0

[State 913, 2]
type = VelSet
trigger1 = Time = 0
y = 0

[State 913, 3]
type = VelMul
trigger1 = Time >= 0
x = 0.85

[State 913, 4]
type = PlaySnd
trigger1 = Time = 0
value = 5000, 10

[State 913, 5]
type = GameMakeAnim
trigger1 = Time = 0
value = 60
pos = 0, 0
under = 1

[State 913, 6]
type = ChangeState
trigger1 = Vel Y < 0
value = 814

[Statedef 814]
type = L
movetype= H
physics = N

[State 914, 0]
type = ChangeAnim2
trigger1 = time = 0
value = 814

[State 914, 1]
type = Veladd
trigger1 = Time >= 0
y = .5

[State 914, 1]
type = Veladd
trigger1 = Time = 3
x = 3

[State 914, 2]
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5100

[State 240, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;--------------------------------------------------------------------------------------------


;Agarre 2

[Statedef 900]
type = S
movetype = A
physics = S
poweradd = 110
ctrl = 0
anim = 900
sprpriority = -1


[State 900, 0]
type = HitDef
trigger1 = AnimElem = 1
attr = S, NT
Hitflag = M-
priority = 2, Miss
sparkno = -1
hitsound = S800, 0
sprpriority = 3
p1stateno = 905
p2stateno = 910

[State 900, 1]
type = ChangeState
Trigger1 = AnimTime = 0
value = 0
ctrl = 1


;-------------------------

;state P1


[Statedef 905]
type = S
movetype = A
physics = N
anim = 905
velset = 0,0
sprpriority = -1

[State 906, 3]
type = PlaySnd
trigger1 = Time = 10
value = 40,0

[State -3, Explod]
type = Explod
trigger1 = animelem = 1 
anim = 7020
pos = -15,-85
postype = P2
sprpriority = 5
ownpal = 0
bindtime = 170

[State 906, 3]
type = PlaySnd
trigger1 = Time = 5
value = 41,0

[state 3110, explod]
type = explod
trigger1 = time = 0
id = 7004
anim = 7004
pos = 0, 0
postype = p1
bindtime = -1
removetime = 24
removeongethit = 1
sprpriority = 3
supermovetime = 24

[State 905, 0]
type = Changestate
trigger1 = animtime = 0
value = 906

[Statedef 906]
type = S
movetype = A
physics = N
anim = 906

[State 906, 0]
type = VelSet
trigger1 = Time = 0
x = 2
y = -7

[State 906, 1]
type = VelAdd
trigger1 = Time >= 0
y = .4

[State 906, 2]
type = Changestate
trigger1 = Vel Y > 0
trigger1 = Pos Y > 0
value = 907

[Statedef 907]
type = S
movetype = A
physics = N
anim = 907
velset = 0,0
sprpriority = -1

[State 906, 3]
type = PlaySnd
trigger1 = Time = 0
value = 5100,0
volume = 250

[State 907, 0]
type = BindToTarget
trigger1 =  animtime != 0
pos = 16,0

[state 3110, explod]
type = explod
trigger1 = time = 0
id = 7003
anim = 7003
pos = 0, 0
postype = p1
bindtime = -1
removetime = 140
removeongethit = 1
sprpriority = 2


[State -3, Explod]
type = Explod
trigger1 = animelem = 2
trigger2 = animelem = 4
trigger3 = animelem = 6
trigger4 = animelem = 8
trigger5= animelem = 10
trigger6 = animelem = 12
anim = 7020
pos = 15,-10
postype = P1
sprpriority = 5
ownpal = 1
bindtime = 170

[State 907, 1]
type = TargetLifeAdd
trigger1 = animelem = 2
trigger2 = animelem = 4
trigger3 = animelem = 6
trigger4 = animelem = 8
trigger5= animelem = 10
trigger6 = animelem = 12
value = -8

[State 907, 2]
type = PlaySnd
trigger1 = animelem = 2
trigger2 = animelem = 4
trigger3 = animelem = 6
trigger4 = animelem = 8
trigger5= animelem = 10
trigger6 = animelem = 12
value = 220,1

[State 907, 3]
type = PlaySnd
trigger1 = animelem = 2
trigger2 = animelem = 4
trigger3 = animelem = 6
trigger4 = animelem = 8
trigger5= animelem = 10
trigger6 = animelem = 12
value = 1500,7
volume = 250



[State 907, 5]
type = Changestate
trigger1 = animtime = 0
value = 908


[Statedef 908]
type    = S
movetype= A
physics = A
ctrl = 0
anim = 914
sprpriority = -1

[State -3, Explod]
type = Explod
trigger1 = time = 0 
anim = 7023
pos = 15,-10
postype = P1
sprpriority = 5
ownpal = 0
bindtime = 170

[State 908, 0]
type = VelSet
trigger1 = Time = 0
x = -1
y = -1

[State 908, 1]
type = EnvShake
Trigger1 = Time = 0
time = 12
ampl = 4
freq = 127

[State 908, 2]
type = TargetLifeAdd
trigger1 = Time = 0
value = -32

[State 908, 3]
type = PlaySnd
trigger1 = Time = 0
value = 260,0

[State 908, 4]
type = PlaySnd
trigger1 = Time = 0
value = 220,0

[State 908, 5]
type = GameMakeAnim
trigger1 = Time = 0
value = 2
pos = 37,-15

[State 908, 7]
type = TargetVelSet
trigger1 = Time = 0
y = -9.5

[State 908, 8]
type = PlaySnd
trigger1 = Time = 0
value = 1500, 6
volume = 250

[State 908, 9]
type = GameMakeAnim
trigger1 = Time = 0
value = 60
pos = 0, 0
under = 1

[State 908, 10]
type = ChangeState
trigger1 = AnimTime = 12
value = 52

;-------------------------

;state P2

[Statedef 910]
type = A
movetype = H
physics = N
ctrl = 0
velset = 0, 0

[State 910, 0]
type = VelSet
trigger1 = AnimElem = 3
x = -2
y = -5

[State 910, 1]
type = VelAdd
trigger1 = Pos Y < 0
y = .35

[State 910, 2]
type = Changeanim2
trigger1 = Time = 0
value = 910

[State 910, 3]
type = ChangeState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 911


[Statedef 911]
type = L
movetype = H
physics = N
sprpriority = 1

[State 911, 0]
type = Changeanim2
trigger1 = Time = 0
value = 911

[State 911, 3]
type = VelMul
trigger1 = Time = 0
x = .75

[State 911, 4]
type = GameMakeAnim
trigger1 = Time = 1
value = 60
pos = 0, 0
under = 1

[State 911, 6]
type = Changeanim2
trigger1 = Time = 5
value = 912

[State 911, 7]
type = PosSet
trigger1 = Time = 3
y = 20

[State 911, 8]
type = VelAdd
trigger1 = Time >= 3
y = .4

[State 911, 9]
type = ChangeState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 12
value = 913



[Statedef 913]
type = L
movetype= H
physics = N
sprpriority = 1

[State 913, 0]
type = ChangeAnim2
trigger1 = time = 0
value = 913

[State 913, 1]
type = PosSet
trigger1 = Time = 0
y = 0

[State 913, 2]
type = VelSet
trigger1 = Time = 0
y = 0

[State 913, 3]
type = VelMul
trigger1 = Time >= 0
x = 0.85

[State 913, 4]
type = PlaySnd
trigger1 = Time = 0
value = 5000, 10

[State 913, 5]
type = GameMakeAnim
trigger1 = Time = 0
value = 60
pos = 0, 0
under = 1

[State 913, 6]
type = ChangeState
trigger1 = Vel Y < 0
value = 914

[Statedef 914]
type = L
movetype= H
physics = N

[State 914, 0]
type = ChangeAnim2
trigger1 = time = 0
value = 911

[State 914, 1]
type = Veladd
trigger1 = Time >= 0
y = .5

[State 914, 1]
type = Veladd
trigger1 = Time = 3
x = -3

[State 914, 2]
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5100

[State 240, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


;---------------------------------------------------------------------------
; Override common states (use same number to override) :
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; States that are always executed (use statedef -2)
;---------------------------------------------------------------------------

[Statedef -2]


;Sonidos

;salto
[State -2 , 1]
type = PlaySnd
trigger1 = stateno = 40
trigger1 = Time = 15
value = 41,0

[State -2 , 1]
type = PlaySnd
trigger1 = stateno = 40
trigger1 = Time = 5
value = 40,0

[State -2, 1]
type = PlaySnd
triggerall = stateno = 45
trigger1 = time = 1
value = 106,0

[State -2, 1]
type = PlaySnd
triggerall = stateno = 45
trigger1 = time = 0
value = 40,0

;uir
[State -2 , 2]
type = PlaySnd
trigger1 = stateno = 105
trigger1 = Time = 1
value = 106,0

[State -2 , 2]
type = PlaySnd
trigger1 = stateno = 106
trigger1 = Time = 1
value = 105,0

;caer
[State -2 , 2]
type = PlaySnd
trigger1 = stateno = 52
trigger1 = Time = 1
value = 52,0


;Corre
[State -2 , 9]
type = PlaySnd
triggerall = stateno = 100
trigger1 = time = 8
trigger2 = time = 38
trigger3 = time = 68
trigger4 = time = 98
trigger5 = time = 128
trigger6 = time = 158
trigger7 = time = 188
trigger8 = time = 218
trigger9 = time = 248
trigger10 = time = 278
trigger11 = time = 308
trigger12 = time = 338
trigger13 = time = 368
trigger14 = time = 398
trigger15 = time = 428
trigger16 = time = 458
trigger17 = time = 488
trigger18 = time = 518
trigger19 = time = 548
trigger20 = time = 578
trigger21 = time = 608
trigger22 = time = 638
trigger23 = time = 668
trigger24 = time = 698
trigger25 = time = 728
trigger26 = time = 758
trigger27 = time = 788
trigger28 = time = 818
trigger29 = time = 848
trigger30 = time = 878
trigger31 = time = 908
trigger32 = time = 938
trigger33 = time = 968
trigger34 = time = 998
trigger35 = time = 1028
trigger36 = time = 1058
trigger37 = time = 1088
trigger38 = time = 1118
trigger39 = time = 1148
trigger40 = time = 1178
trigger41 = time = 1208
trigger42 = time = 1238
trigger43 = time = 1268
trigger44 = time = 1298
trigger45 = time = 1328
trigger46 = time = 1358
trigger47 = time = 1388
trigger48 = time = 1418
trigger49 = time = 1448
trigger50 = time = 1478
value = 100,0


;camiar adelante
[State -2 , 8]
type = PlaySnd
trigger1 = stateno = 20
trigger1 = AnimElem = 6
value = 10,1

[State -2 , 9]
type = PlaySnd
trigger1 = stateno = 20
trigger1 = AnimElem = 2 
value = 10,0

;caminar atras
[State -2 , 8]
type = PlaySnd
trigger1 = stateno = 21
trigger1 = AnimElem = 4
value = 10,1

[State -2 , 9]
type = PlaySnd
trigger1 = stateno = 21
trigger1 = AnimElem = 2
value = 10,0


;Golpeado parado arriba
[State -2 , 5]
type = PlaySnd
triggerall = stateno = 5001
triggerall = (anim >= 5000) && (anim <= 5009)
trigger1 = time = 1
trigger1 = Life > 1
value = 5000,0

;Golpeado parado abajo
[State -2 , 5]
type = PlaySnd
triggerall = stateno = 5001
triggerall = (anim >= 5010) && (anim <= 5019)
trigger1 = time = 1
trigger1 = Life > 1
value = 5000,20

;Golpeado agachado
[State -2 , 5]
type = PlaySnd
triggerall = stateno = 5001
triggerall = anim >= 5020
trigger1 = time = 1
trigger1 = Life > 1
value = 5000,10

[State -2 , 6]
type = PlaySnd
triggerall = stateno = 5010
trigger1 = time = 1
trigger1 = Life > 1
value = 5000,0

[State -2 , 7]
type = PlaySnd
triggerall = stateno = 5020
trigger1 = time = 1
trigger1 = Life > 1
value = 5000,10

[State -2 , 7]
type = PlaySnd
triggerall = stateno = 5030
trigger1 = time = 1
trigger1 = Life > 1
value = 5000,20

[State -2 , 7]
type = PlaySnd
triggerall = stateno = 5070
trigger1 = time = 1
trigger1 = Life > 1
value = 5000,20

[State -2 , 7]
type = PlaySnd
triggerall = stateno = 1025
trigger1 = time = 1
trigger1 = Life > 1
value = 5000,20

[State -2 , 7]
type = PlaySnd
triggerall = stateno = 5100
trigger1 = time = 3
trigger1 = Life > 1
value = 5000,30


[State -2 , 7]
type = PlaySnd
triggerall = stateno = 5100
trigger1 = time = 1
value = 5100,0

[State -2 , 7]
type = PlaySnd
triggerall = stateno = 5110
trigger1 = time = 3
trigger1 = Life > 1
value = 5000,30


[State -2 , 7]
type = PlaySnd
triggerall = stateno = 5110
trigger1 = time = 1
trigger1 = Life > 1
value = 5100,0


[State -2 , 7]
type = PlaySnd
triggerall = stateno = 5120
trigger1 = time = 1
value = 5120,0

[State -2 , 7]
type = PlaySnd
triggerall = stateno = 5000
trigger1 = time = 1
trigger1 = Life < 1
value = 5050,0

[State -2 , 7]
type = PlaySnd
triggerall = stateno = 5050
trigger1 = time = 1
trigger1 = Life < 1
value = 5050,0

[State -2 , 7]
type = PlaySnd
triggerall = stateno = 5070
trigger1 = time = 1
trigger1 = Life < 1
value = 5050,0

[State -2 , 7]
type = PlaySnd
triggerall = stateno = 1025
trigger1 = time = 1
trigger1 = Life < 1
value = 5050,0

;--------------------------

;----------------------------------------------
;----------------------------------------------


;      sonido screenpack



[State -2 , Draw Game]
type = Playsnd
triggerall = stateno = 175
trigger1 = time = 35
value = F900, 0

[State -2 , Winer]
type = Playsnd
triggerall = stateno = 170
trigger1 = time = 35
value = F900, 1
volume = 200

[State -2 , Winer]
type = Playsnd
triggerall = ( stateno = 5110 & Life <= 0 )
trigger1 = time = 1
value = F900, 2

[State -2, Winer]
type = Explod
triggerall = stateno = 170
Trigger1 = time = 5
anim = F300
pos = 0,0
postype = left
scale = 0.5,0.5
sprpriority = 5
ownpal = 0
bindtime = -1
removetime = 300

;----------------------------------------------
;----------------------------------------------


;---------------------------------
;---------------------------------
;                                -
; AI variabili (statedef -2)     -
;                                -
;---------------------------------
;---------------------------------


;---------------------------------
;          Basic Moves           -
;---------------------------------

;Combo 1


[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 200) 
trigger1 = (movecontact)
value = 210

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 210) 
trigger1 = (movecontact)
value = 260

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 260) 
trigger1 = (movecontact)
value = 220

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 220) 
trigger1 = (movecontact)
value = 270

;Combo 2


[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 200) 
trigger1 = (movecontact)
value = 210

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 210) 
trigger1 = (movecontact)
value = 260

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 260) 
trigger1 = (movecontact)
value = 220

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 220) 
trigger1 = (movecontact)
value = 280


;Combo 3


[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 200) 
trigger1 = (movecontact)
value = 210

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 210) 
trigger1 = (movecontact)
value = 260

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 260) 
trigger1 = (movecontact)
value = 220

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 220) 
trigger1 = (movecontact)
value = 290


;Combo 4


[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 200) 
trigger1 = (movecontact)
value = 210

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 210) 
trigger1 = (movecontact)
value = 260

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 260) 
trigger1 = (movecontact)
value = 220

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 220) 
trigger1 = (movecontact)
value = 295


;Combo 5


[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 230) 
trigger1 = (movecontact)
value = 230

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 230) 
trigger1 = (movecontact)
value = 240

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 240) 
trigger1 = (movecontact)
value = 250

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 250) 
trigger1 = (movecontact)
value = 270


;Combo 6


[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 230) 
trigger1 = (movecontact)
value = 230

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 230) 
trigger1 = (movecontact)
value = 240

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 240) 
trigger1 = (movecontact)
value = 250

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 250) 
trigger1 = (movecontact)
value = 280


;Combo 7


[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 230) 
trigger1 = (movecontact)
value = 230

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 230) 
trigger1 = (movecontact)
value = 240

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 240) 
trigger1 = (movecontact)
value = 250

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 250) 
trigger1 = (movecontact)
value = 290


;Combo 8


[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 230) 
trigger1 = (movecontact)
value = 230

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 230) 
trigger1 = (movecontact)
value = 240

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 240) 
trigger1 = (movecontact)
value = 250

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 250) 
trigger1 = (movecontact)
value = 295


;Agachado

;Combo 1

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 400) 
trigger1 = (movecontact)
value = 410

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 410) 
trigger1 = (movecontact)
value = 420

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 420) 
trigger1 = (movecontact)
value = 440

;Combo 2

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 400) 
trigger1 = (movecontact)
value = 410

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 410) 
trigger1 = (movecontact)
value = 420

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 420) 
trigger1 = (movecontact)
value = 450

;Combo 3

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 430) 
trigger1 = (movecontact)
value = 430

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 430) 
trigger1 = (movecontact)
value = 440

;Combo 4

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 430) 
trigger1 = (movecontact)
value = 430

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (stateno = 430) 
trigger1 = (movecontact)
value = 450

;combinacion con agaree

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (p2bodydist X <= 30)
triggerall = (var(59) != 0) && (stateno = 200) 
trigger1 = (movecontact)
value = 900

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (p2bodydist X <= 40)
triggerall = (var(59) != 0) && (stateno = 230) 
trigger1 = (movecontact)
value = 800

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (p2bodydist X <= 30)
triggerall = (var(59) != 0) && (stateno = 240) 
trigger1 = (movecontact)
value = 900

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (p2bodydist X <= 40)
triggerall = (var(59) != 0) && (stateno = 260) 
trigger1 = (movecontact)
value = 800

;----------------------

;poderes de energia

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (stateno = 220) 
trigger1 = (movecontact)
value = 42000

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (stateno = 220) 
trigger1 = (movecontact)
value = 40000

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (stateno = 250) 
trigger1 = (movecontact)
value = 40020


[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (stateno = 250) 
trigger1 = (movecontact)
value = 40100

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (stateno = 240) 
trigger1 = (movecontact)
value = 40010

[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (stateno = 210) 
trigger1 = (movecontact)
value = 40030

;----------------------

;---------------------------------
;        Special Moves           -
;---------------------------------


;---------
; Tierra -
;---------


;Recarga de cosmo
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (random = [0, 50])
trigger1 = (P2bodydist X >= 200) &&  (power <= 2999) && (prevstateno != 5120) && (p2movetype != H) 
value = 730000

;Mega Block
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (random = [50, 100])
trigger1 = (P2bodydist X <= 120) && (prevstateno != 5120) && (p2movetype = A)
value = 1400


;Esferas de Energia 
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (random = [100, 250])
trigger1 = (P2bodydist X >= 150) && (prevstateno != 5120) && (p2movetype != H) 
value = 42000

;Esferas de Energia 
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (random = [100, 250])
trigger1 = (P2bodydist X >= 200) && (prevstateno != 5120) && (p2movetype != H) 
value = 40000

;Esferas de Energia 
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (random = [250, 400])
trigger1 = (P2bodydist X >= 200) && (prevstateno != 5120) && (p2movetype != H) 
value = 40020

;Esferas de Energia 
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (statetype = S) &&  (ctrl) && (random = [250, 400])
trigger1 = (P2bodydist X >= 150) && (prevstateno != 5120) && (p2movetype != H) 
value = 40100

;Esferas de Energia 
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (random = [400, 500])
trigger1 = (P2bodydist X >= 200) && (prevstateno != 5120) && (p2movetype != H) 
value = 40010

;Esferas de Energia 
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (statetype = S) &&  (ctrl) && (random = [400, 500])
trigger1 = (P2bodydist X >= 150) && (prevstateno != 5120) && (p2movetype != H) 
value = 40030

;combo y remate 
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (random = [450, 650])
trigger1 = (P2bodydist X <= 120) && (prevstateno != 5120) && (p2movetype != H) 
value = 1600

;Agarre 1
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (p2statetype = S)
trigger1 = (p2bodydist X <= 40) && (P2MoveType !=A) && (random = [500,800])
value = 800


;Agarre 2
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (p2statetype = S)
trigger1 = (p2bodydist X <= 30) && (P2MoveType !=A) && (random = [500,800])
value = 900


;--------
;  Aire -
;--------


;Patada voladora aire
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = A) && (ctrl) && (random = [0, 300])
trigger1 = (p2bodydist X <= 200) && (prevstateno != 5120)
value = 660

;combo y Patada voladora aire
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = A) && (ctrl) && (random = [300, 450])
trigger1 = (p2bodydist X <= 200) && (prevstateno != 5120)
value = 1500

;combo y Patada voladora aire
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = A) && (ctrl) && (random = [450, 600])
trigger1 = (p2bodydist X <= 200) && (prevstateno != 5120)
value = 1550


;esferas de energia
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (statetype = A) && (ctrl) && (random = [100, 200])
trigger1 = (p2bodydist X <= 200) && (prevstateno != 5120)
value = 40300

;esferas de energia
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (statetype = A) && (ctrl) && (random = [300, 400])
trigger1 = (p2bodydist X <= 200) && (prevstateno != 5120)
value = 40350

;esferas de energia
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = NumHelper(1000) = 0
triggerall = (var(59) != 0) && (statetype = A) && (ctrl) && (random = [400, 500])
trigger1 = (p2bodydist X <= 200) && (prevstateno != 5120)
value = 44000


;---------------------------------
;         Super  Moves           -
;---------------------------------

;Septimo Sentido
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (p2statetype != L)
trigger1 = (p2bodydist X >= 150) && (power >= 3000) && (random = [600,650])
value = 2000

;Septimo Sentido
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = life <= 450
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (p2statetype != L)
trigger1 = (p2bodydist X >= 120) && (power >= 1000) && (random = [600,750])
value = 2000

;Escudo de Athena
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (p2statetype != L)
trigger1 = (p2bodydist X <= 150) && (power >= 1000) && (random = [600,700])
value = 3000

;Ataque Esferas de energia
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (p2statetype != L)
trigger1 = (p2bodydist X <= 140) && (power >= 1000) && (random = [700,800])
value = 3100

;Escudo de Athena
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (p2statetype != L)
trigger1 = (p2bodydist X <= 90) && (power >= 1000) && (random = [600,700])
value = 3300

;Ataque con la armadura suelo
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (p2statetype != L)
trigger1 = (p2bodydist X >= 50) && (power >= 2000) && (random = [600,700])
value = 3200

;Ataque con la armadura Aire
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (p2statetype != L)
trigger1 = (p2bodydist X >= 75) && (power >= 2000) && (random = [700,800])
value = 3400

;Ataque con la armadura Aire
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = A) && (ctrl) && (p2statetype != L)
trigger1 = (p2bodydist X >= 75) && (power >= 2000) && (random = [600,750])
value = 3401

;Jarron de Athena
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (p2statetype != L)
trigger1 = (p2bodydist X <= 180) && (power >= 3000) && (random = [600,750])
value = 3500

;las 12 Armaduras caballeros dorados
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (p2statetype != L)
trigger1 = (p2bodydist X <= 150) && (power >= 3000) && (random = [600,750])
value = 3600

;Ataque del baculo de atena (diosa Nikel)
[State -2]
type = changestate
Triggerall = roundstate = 2
triggerall = (var(59) != 0) && (statetype = S) && (ctrl) && (p2statetype != L)
trigger1 = (P2bodydist X >= 135) && (power >= 3000) && (random = [650,800])
value = 3700


;------------------------
;---------------------------------------------------------------------------
; States that are executed when in self's state file (use statedef -3)
;---------------------------------------------------------------------------

[Statedef -3]

[State -3,remove]
type = RemoveExplod
triggerall = NumExplod(2) = 1
trigger1 = stateno != 0
ID = 2

[State -3,remove]
type = RemoveExplod
triggerall = NumExplod(2) = 1
trigger1 = anim = 5
ID = 2

;----------------------------------------
;  anulaciones de sonidos en las intros
;----------------------------------------

[State -3, 11]
type = stopsnd
trigger1 = stateno != 191
channel = 2

[State -3, 11]
type = stopsnd
trigger1 = stateno != 192
channel = 3

[State -3, 11]
type = stopsnd
trigger1 = stateno != 193
channel = 4

[State -3, 11]
type = stopsnd
trigger1 = stateno != 194
channel = 5

[State -3, 11]
type = stopsnd
trigger1 = stateno != 199
channel = 10

;----------------------------------------
;  anulaciones de sonidos en las Endig
;----------------------------------------

[State -3, 11]
type = stopsnd
trigger1 = stateno != 181
channel = 8

[State -3, 11]
type = stopsnd
trigger1 = stateno != 184
channel = 9